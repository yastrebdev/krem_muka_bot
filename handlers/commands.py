from aiogram import html, Router
from aiogram.filters import CommandStart, Command
from aiogram.types import Message, InputMediaPhoto, FSInputFile
from aiogram.fsm.context import FSMContext

# from db.users import create_user, find_user_by_username
# from states.create_document import CreateDocument

import os

router = Router()


@router.message(CommandStart())
async def start(message: Message):
    username = message.from_user.username
    name = message.from_user.first_name

    await message.answer(f"–ü—Ä–∏–≤–µ—Ç, {html.bold(message.from_user.first_name)}! üëã\n\n"
                         "–≠—Ç–æ –±–æ—Ç –¥–ª—è –ø—Ä–∏—ë–º–∞ –∑–∞–∫–∞–∑–æ–≤ –≤ –∫–æ–Ω–¥–∏—Ç–µ—Ä—Å–∫–æ–π @kremmyka\n\n"
                         "–°–¥–µ–ª–∞—Ç—å –∑–∞–∫–∞–∑ -- /new_order\n"
                         "–ú–µ–Ω—é -- /menu\n"
                         "–ü—Ä–∏–º–µ—Ä—ã –¥–µ—Å–µ—Ä—Ç–æ–≤ -- /examples")

    # user = await find_user_by_username(username)
    #
    # if not user:
    #     await create_user(username, name)


@router.message(Command('new_order'))
async def order(message: Message):
    await message.answer(text='–í—ã–±–µ—Ä–∏—Ç–µ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –∑–∞–∫–∞–∑–∞—Ç—å üéÇ')


@router.message(Command('menu'))
async def menu(message: Message):
    folder_path = 'files/menu'
    media_group = []
    print(folder_path)
    # –ü–æ–ª—É—á–∞–µ–º —Å–ø–∏—Å–æ–∫ —Ñ–∞–π–ª–æ–≤ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏–∑ –ø–∞–ø–∫–∏
    for filename in os.listdir(folder_path):
        if filename.lower().endswith(('.jpg', '.jpeg', '.png', '.webp')):
            file_path = os.path.join(folder_path, filename)
            photo = FSInputFile(file_path)
            media_group.append(InputMediaPhoto(media=photo))

    if media_group:
        await message.answer("–ù–∞—à –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç üéÇ")
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–ª–∏—Ç–∫–æ–π
        await message.answer_media_group(media_group)
    else:
        await message.answer("–ò–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã üòî")


@router.message(Command('examples'))
async def menu(message: Message):
    await message.answer(text='–ü—Ä–∏–º–µ—Ä—ã –≥–æ—Ç–æ–≤—ã—Ö –¥–µ—Å–µ—Ä—Ç–æ–≤ üéÇ')